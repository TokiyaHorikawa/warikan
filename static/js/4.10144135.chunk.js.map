{"version":3,"sources":["components/FormButton.tsx","pages/home.tsx"],"names":["FormButton","type","onClick","label","className","Home","useState","totalPrice","setTotalPrice","totalAPrice","setTotalAPrice","totalBPrice","setTotalBPrice","useForm","defaultValues","aPayments","price","bPayments","register","control","handleSubmit","aFieldArray","useFieldArray","name","bFieldArray","wariPaymentAmount","useMemo","resultText","payer","receiver","paymentAmount","toLocaleString","onSubmit","data","totalA","reduce","acc","current","Number","totalB","fields","map","_","index","remove","append","value"],"mappings":"oJA6BeA,EApByB,SAAC,GAKlC,IAJLC,EAII,EAJJA,KACAC,EAGI,EAHJA,QAGI,IAFJC,aAEI,MAFI,SAEJ,EADJC,EACI,EADJA,UAEA,OACE,wBACEH,KAAMA,EACNC,QAASA,EACTE,UACE,0FACAA,EALJ,SAQGD,KCkGQE,UAlHQ,WAAO,IAAD,EACSC,mBAAS,GADlB,mBACpBC,EADoB,KACRC,EADQ,OAEWF,mBAAS,GAFpB,mBAEpBG,EAFoB,KAEPC,EAFO,OAGWJ,mBAAS,GAHpB,mBAGpBK,EAHoB,KAGPC,EAHO,OAKiBC,YAAkB,CAC5DC,cAAe,CACbC,UAAW,CAAC,CAAEC,MAAO,IACrBC,UAAW,CAAC,CAAED,MAAO,OAHjBE,EALmB,EAKnBA,SAAUC,EALS,EAKTA,QAASC,EALA,EAKAA,aAMrBC,EAAcC,YAAc,CAAEH,UAASI,KAAM,cAC7CC,EAAcF,YAAc,CAAEH,UAASI,KAAM,cAgB7CE,EAAoBC,mBAAQ,kBAAMnB,EAAa,IAAG,CAACA,IAEnDoB,EAAaD,mBAAQ,WACzB,IAAME,EAAQnB,EAAcE,EAAc,IAAM,IAC1CkB,EAAqB,MAAVD,EAAgB,IAAM,IACjCE,EACJL,GAA+B,MAAVG,EAAgBnB,EAAcE,GACrD,MAAM,iBAAN,OAAciB,EAAd,6BAAyBC,EAAzB,6BAAuCC,EAAcC,iBAArD,8BACC,CAACtB,EAAaE,EAAac,IAE9B,OACE,sBAAKrB,UAAU,qCAAf,UACE,uBAAM4B,SAAUZ,GA1BF,SAACa,GAAoB,IAC7BlB,EAAyBkB,EAAzBlB,UAAWE,EAAcgB,EAAdhB,UACbiB,EAASnB,EAAUoB,QAAO,SAACC,EAAKC,GACpC,OAAOD,EAAME,OAAOD,EAAQrB,SAC3B,GACGuB,EAAStB,EAAUkB,QAAO,SAACC,EAAKC,GACpC,OAAOD,EAAME,OAAOD,EAAQrB,SAC3B,GAEHR,EADc0B,EAASK,GAEvB7B,EAAewB,GACftB,EAAe2B,MAeb,UACE,sBAAKnC,UAAU,MAAf,UACE,oBAAIA,UAAU,WAAd,qEACA,6BACGiB,EAAYmB,OAAOC,KAAI,SAACC,EAAGC,GAAJ,OACtB,6BACE,sBAAKvC,UAAU,OAAf,UACE,+CACEH,KAAK,UACDiB,EAAS,aAAD,OAAcyB,EAAd,YAFd,IAGEvC,UAAU,wDAEZ,cAAC,EAAD,CACEH,KAAK,SACLC,QAAS,kBAAMmB,EAAYuB,OAAOD,IAClCxC,MAAM,qBAVZ,qBAAuBwC,SAgB3B,cAAC,EAAD,CACE1C,KAAK,SACLC,QAAS,kBAAMmB,EAAYwB,OAAO,CAAE7B,MAAO,KAC3Cb,MAAM,gCAGV,sBAAKC,UAAU,MAAf,UACE,yFACA,6BACGoB,EAAYgB,OAAOC,KAAI,SAACC,EAAGC,GAAJ,OACtB,6BACE,sBAAKvC,UAAU,OAAf,UACE,+CACEH,KAAK,UACDiB,EAAS,aAAD,OAAcyB,EAAd,YAFd,IAGEvC,UAAU,wDAEZ,cAAC,EAAD,CACEH,KAAK,SACLC,QAAS,kBAAMsB,EAAYoB,OAAOD,IAClCxC,MAAM,qBAVZ,qBAAuBwC,SAgB3B,cAAC,EAAD,CACE1C,KAAK,SACLC,QAAS,kBAAMsB,EAAYqB,OAAO,CAAE7B,MAAO,KAC3Cb,MAAM,gCAGV,qBAAKC,UAAU,4BAAf,SACE,uBACEH,KAAK,SACL6C,MAAM,2BACN1C,UAAU,sGAIbG,GACD,gCACE,oBAAIH,UAAU,UAAd,sCACA,+CAAQG,EAAWwB,iBAAnB,YACA,4DAAWtB,EAAYsB,iBAAvB,YACA,4DAAWpB,EAAYoB,iBAAvB,YACA,wEAAaN,EAAkBM,iBAA/B,YACA,mBAAG3B,UAAU,uBAAb,SAAqCuB","file":"static/js/4.10144135.chunk.js","sourcesContent":["import React from 'react';\n\ntype PropsType = {\n  type?: 'button' | 'submit' | 'reset' | undefined;\n  onClick?: () => void;\n  label?: string;\n  className?: string;\n};\n\nconst FormButton: React.FC<PropsType> = ({\n  type,\n  onClick,\n  label = 'BUTTON',\n  className,\n}) => {\n  return (\n    <button\n      type={type}\n      onClick={onClick}\n      className={\n        'py-2 px-4 font-semibold rounded-lg shadow-md text-white bg-green-500 hover:bg-green-700' +\n        className\n      }\n    >\n      {label}\n    </button>\n  );\n};\n\nexport default FormButton;\n","import React, { useState, useMemo } from 'react';\nimport { useForm, useFieldArray } from 'react-hook-form';\nimport FormButton from 'components/FormButton';\n\ntype Payments = {\n  aPayments: { price: number }[];\n  bPayments: { price: number }[];\n};\nconst Home: React.FC = () => {\n  const [totalPrice, setTotalPrice] = useState(0);\n  const [totalAPrice, setTotalAPrice] = useState(0);\n  const [totalBPrice, setTotalBPrice] = useState(0);\n\n  const { register, control, handleSubmit } = useForm<Payments>({\n    defaultValues: {\n      aPayments: [{ price: 0 }],\n      bPayments: [{ price: 0 }],\n    },\n  });\n  const aFieldArray = useFieldArray({ control, name: 'aPayments' });\n  const bFieldArray = useFieldArray({ control, name: 'bPayments' });\n\n  const calcPrice = (data: Payments) => {\n    const { aPayments, bPayments } = data;\n    const totalA = aPayments.reduce((acc, current) => {\n      return acc + Number(current.price);\n    }, 0);\n    const totalB = bPayments.reduce((acc, current) => {\n      return acc + Number(current.price);\n    }, 0);\n    const total = totalA + totalB;\n    setTotalPrice(total);\n    setTotalAPrice(totalA);\n    setTotalBPrice(totalB);\n  };\n\n  const wariPaymentAmount = useMemo(() => totalPrice / 2, [totalPrice]);\n\n  const resultText = useMemo(() => {\n    const payer = totalAPrice < totalBPrice ? 'A' : 'B';\n    const receiver = payer === 'A' ? 'B' : 'A';\n    const paymentAmount =\n      wariPaymentAmount - (payer === 'A' ? totalAPrice : totalBPrice);\n    return `行動: ${payer}さんが${receiver}さんに${paymentAmount.toLocaleString()}円支払う`;\n  }, [totalAPrice, totalBPrice, wariPaymentAmount]);\n\n  return (\n    <div className=\"grid justify-items-center border-2\">\n      <form onSubmit={handleSubmit(calcPrice)}>\n        <div className=\"m-2\">\n          <h3 className=\"text-lg \">Aさんが支払った金額</h3>\n          <ul>\n            {aFieldArray.fields.map((_, index) => (\n              <li key={`a-payments-${index}`}>\n                <div className=\"flex\">\n                  <input\n                    type=\"number\"\n                    {...register(`aPayments.${index}.price` as const)}\n                    className=\"form-input mt-1 block w-32 border-2 border-current\"\n                  />\n                  <FormButton\n                    type=\"button\"\n                    onClick={() => aFieldArray.remove(index)}\n                    label=\"削除\"\n                  />\n                </div>\n              </li>\n            ))}\n          </ul>\n          <FormButton\n            type=\"button\"\n            onClick={() => aFieldArray.append({ price: 0 })}\n            label=\"追加する\"\n          />\n        </div>\n        <div className=\"m-2\">\n          <h3>Bさんが支払った金額</h3>\n          <ul>\n            {bFieldArray.fields.map((_, index) => (\n              <li key={`b-payments-${index}`}>\n                <div className=\"flex\">\n                  <input\n                    type=\"number\"\n                    {...register(`bPayments.${index}.price` as const)}\n                    className=\"form-input mt-1 block w-32 border-2 border-current\"\n                  />\n                  <FormButton\n                    type=\"button\"\n                    onClick={() => bFieldArray.remove(index)}\n                    label=\"削除\"\n                  />\n                </div>\n              </li>\n            ))}\n          </ul>\n          <FormButton\n            type=\"button\"\n            onClick={() => bFieldArray.append({ price: 0 })}\n            label=\"追加する\"\n          />\n        </div>\n        <div className=\"grid justify-items-center\">\n          <input\n            type=\"submit\"\n            value=\"計算する\"\n            className=\"py-2 px-4 w-full font-semibold rounded-lg shadow-md text-white bg-red-500 hover:bg-red-700\"\n          />\n        </div>\n      </form>\n      {!!totalPrice && (\n        <div>\n          <h3 className=\"text-lg\">計算結果</h3>\n          <p>合計: {totalPrice.toLocaleString()}円</p>\n          <p>Aさん合計: {totalAPrice.toLocaleString()}円</p>\n          <p>Bさん合計: {totalBPrice.toLocaleString()}円</p>\n          <p>割り勘金額/人: {wariPaymentAmount.toLocaleString()}円</p>\n          <p className=\"text-red-500 text-xl\">{resultText}</p>\n        </div>\n      )}\n    </div>\n  );\n};\nexport default Home;\n"],"sourceRoot":""}